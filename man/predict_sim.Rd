% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_sim.R
\name{predict_sim}
\alias{predict_sim}
\title{Predict suitability derived from simple ellipsoid envelope models}
\usage{
predict_sim(object, projection_layers, prediction = "suitability",
  return_numeric = FALSE, tolerance = 1e-60, name = NULL, format,
  overwrite = FALSE)
}
\arguments{
\item{object}{a fitted object of class ellipsoid or ellipsoid_model_sim.}

\item{projection_layers}{RasterStack or matrix of variables representing
environmental conditions of the scenario to which \code{object} will be
projected. See details.}

\item{prediction}{(character) type of prediction to be made, options are:
"suitability", "mahalanobis", and "both". Default = "suitability".}

\item{return_numeric}{(logical) whether or not to return values mahalanobis
distance and suitability as part of the results (it depends on the type of
\code{prediction} selected). Default = FALSE.}

\item{tolerance}{the tolerance for detecting linear dependencies.
Default = 1e-60.}

\item{name}{(character) optional, name of the file to be writen. Must include
format extension (e.g., ".tif"). When defined, raster predictions are not
returned to the environment. Default = NULL. See detals.}

\item{format}{(charater) if \code{name} is defined, file type to be written.
Must correspond with format extension in \code{name}.
See \code{\link[raster]{writeFormats}}.}

\item{overwrite}{(logical) if \code{name} is defined, whether or not to
overwrite an exitent file with the exact same name. Default = FALSE.}
}
\value{
An ellipsoid_model_sim with new predictions.
}
\description{
predict_sim predicts suitability values based on mahalanobis
distances based on a centroid and a covariance matrix.
}
\details{
Argument \code{object} must be of one of the following classes: "ellipsoid"
or "ellipsoid_model_sim". The prefix "suitability" or "mahalanobis" will be
added to \code{name} depending on the type of prediction defined in
\code{prediction}.

For \code{projection_layers} variables can be given either as a RasterStack
or as a matrix. If a matrix is given each column represents a variable and
predictions are returned only as numeric vectors. In both cases, variable
names must match exactly the order and name of variables used to create
\code{object}.
}
